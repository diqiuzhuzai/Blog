name: "DeepLanes"
layer {
  name: "deeplanes"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/home/an/An/Deeplane/lane_an/data_yes_fz/train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "deeplanes"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/home/an/An/Deeplane/lane_an/data_yes_fz/val_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    stride: 6
    kernel_size: 18
    weight_filler {
      type: "xavier"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "Sigmoid1"
  type: "Sigmoid"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1_1"
  top: "conv1_1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  bottom: "conv1_1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 128
    stride: 1
    kernel_size: 10
      weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "Sigmoid2"
  type: "Sigmoid"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv1_2"
  top: "conv1_2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
  }
}
layer {
  bottom: "conv1_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv1_3"
  name: "conv1_3"
  type: "Convolution"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    stride: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      std: 0.0001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv1_3"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "ip1"
  top: "ip1"
  name: "drop1"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  bottom: "ip2"
  top: "ip2"
  name: "drop2"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 317
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy_1"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy_1"
  accuracy_param
  {
    top_k:1
  }
  include {
    phase: TEST
  }
}

layer {
  name: "accuracy_5"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy_5"
  accuracy_param
  {
    top_k:5
  }
  include {
    phase: TEST
  }
}
layer {
      name: "loss"
      type: "SoftmaxWithLoss"
      bottom: "ip3"
      bottom: "label"
    }
